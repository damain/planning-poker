-- Create rooms table
create table if not exists rooms (
  id bigint generated by default as identity primary key,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  code text unique not null,
  name text not null,
  active boolean default true,
  current_story text,
  show_votes boolean default false
);

-- Create stories table
create table if not exists stories (
  id bigint generated by default as identity primary key,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  room_code text references rooms(code) on delete cascade,
  title text not null,
  description text,
  final_estimate integer,
  status text default 'pending'
);

-- Create votes table
create table if not exists votes (
  id bigint generated by default as identity primary key,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  room_code text references rooms(code) on delete cascade,
  story_id bigint references stories(id) on delete cascade,
  user_name text not null,
  vote_value integer,
  unique(story_id, user_name)
);

-- Create RLS (Row Level Security) policies
alter table rooms enable row level security;
alter table stories enable row level security;
alter table votes enable row level security;

-- Create policies for rooms
create policy "Allow public read access to rooms"
  on rooms for select
  to anon
  using (true);

create policy "Allow public insert access to rooms"
  on rooms for insert
  to anon
  with check (true);

create policy "Allow public update access to rooms"
  on rooms for update
  to anon
  using (true);

-- Create policies for stories
create policy "Allow public read access to stories"
  on stories for select
  to anon
  using (true);

create policy "Allow public insert access to stories"
  on stories for insert
  to anon
  with check (true);

create policy "Allow public update access to stories"
  on stories for update
  to anon
  using (true);

-- Create policies for votes
create policy "Allow public read access to votes"
  on votes for select
  to anon
  using (true);

create policy "Allow public insert access to votes"
  on votes for insert
  to anon
  with check (true);

create policy "Allow public update access to votes"
  on votes for update
  to anon
  using (true);
